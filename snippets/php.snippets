snippet php
	<?php
	${1}
snippet phpil
	<?php ${1} ?>
# Start Docblock
snippet /*
	/**
	 * ${1}
	 */
# Function - post doc
snippet doc_fp
	/**
	 * ${1:undocumented function}
	 *
	 * @return ${2:void}
	 */${4}
# Function
snippet doc_f
	/**
	 * ${4:Undocumented function.}
	 *
	 * @return ${5:void}
	 */
	${1}function ${2}(${3}) {
	  ${7}
	}
# class ...
snippet class
	/**
	 * ${1}
	 */
	class ${2:ClassName}
	{
		${3}
		function ${4:__construct}(${5:argument})
		{
			${6:// code...}
		}
	}
# define(...)
snippet def
	define('${1}'${2});${3}
snippet wh
	while (${1:/* condition */}) {
		${2:// code...}
	}
# do ... while
snippet do
	do {
		${2:// code... }
	} while (${1:/* condition */});
snippet if
	if (${1:/* condition */}) {
		${2:// code...}
	}
snippet else
	else {
		${1:// code...}
	}
snippet elseif
	elseif (${1:/* condition */}) {
		${2:// code...}
	}
# Tertiary conditional
snippet t
	$${1:retVal} = (${2:condition}) ? ${3:a} : ${4:b};${5}
snippet switch
	switch ($${1:variable}) {
		case '${2:value}':
			${3:// code...}
			break;
		${5}
		default:
			${4:// code...}
			break;
	}
snippet case
	case '${1:value}':
		${2:// code...}
		break;${3}
snippet for
	for ($${2:i} = 0; $$2 < ${1:count}; $$2${3:++}) {
		${4: // code...}
	}
snippet foreach
	foreach ($${1:variable} as $${2:value}) {
		${3:// code...}
	}
snippet foreachk
	foreach ($${1:variable} as $${2:key} => $${3:value}) {
		${4:// code...}
	}
snippet fun
	${1:public }function ${2:FunctionName}(${3})
	{
		${4:// code...}
	}
# $... = array (...)
snippet array
	$${1:arrayName} = array('${2}' => ${3});${4}
snippet try
	try {
		${2}
	} catch (${1:Exception} $e) {
	}
# lambda with closure
snippet lambda
	${1:static }function (${2:args}) use (${3:&$x, $y /*put vars in scope (closure) */}) {
		${4}
	};
# pre_dump();
snippet pd
	echo '<pre>'; var_dump(${1}); echo '</pre>';
# Getters & Setters
snippet getset
	/**
	 * Gets the value of ${1:}
	 *
	 * @return ${2}
	 */
	function get$1()
	{
		return $this->_$1;
	}

	/**
	 * Sets the value of $1
	 *
	 * @param mixed $$1 ${3}
	 */
	function set$1($$1)
	{
		$this->_$1 = $$1;
	}
snippet rett
	return true;
snippet retf
	return false;
